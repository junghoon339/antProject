<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 외부 properties파일 위치 설정 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
		<property name="locations">
			<value>/WEB-INF/spring/appServlet/dbInfo.properties</value>		
		</property>
	</bean>

	<!-- JDBC 설정 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
		<property name="driverClassName" value="${driverName}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${userName}"/>
		<property name="password" value="${userPass}"/>
		<property name="maxActive" value="10"/>
	</bean>
	
	<!-- MyBatis 설정 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- <property name="configLocation" value="~~/SqlMapCinfig.xml"/> -->
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:mapper/*/*Mapper.xml"/>
		<!-- vo 폴더 안에 별칭 자동으로 만들어줌 -->
		<property name="typeAliasesPackage" value="com.ant" />
		<property name="configLocation" value="/WEB-INF/spring/appServlet/sql-map-config.xml"/>
	</bean>	
	
	<!-- SqlSession 객체 생성 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<constructor-arg ref="sqlSessionFactory" index="0"/>
	</bean>
	
	<!-- Spring Transaction을 위한 설정 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 아래 해당하는 것들을 모두 어노테이션으로 처리 -->
	<!-- 트랜잭션에 설정되어있는 공통코드(advice) 옵션 설정 -->
	<!-- <tx:advice transaction-manager="transactionManager" id="txAdvice">
		<tx:attributes>
			<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice> -->
	<!-- 실제 타겟 대상 (transaction을 적용할 대상)과 transaction advice를 연결 -->
	<!-- advisor = pointcut+advice -->
	<!-- <aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(public * kosta.web.service.*Impl.*(..))" />
	</aop:config> -->
	
	<!-- transaction을 annotation으로 설정 (tx:advice와 aop:config가 생략) -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
</beans>
